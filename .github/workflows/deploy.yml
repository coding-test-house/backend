name: Deploy Spring Boot to EC2

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Replace environment variables in application-prod.yml
        run: |
          envsubst < ./src/main/resources/application-prod.yml > ./src/main/resources/application-prod.yml.tmp
          mv ./src/main/resources/application-prod.yml.tmp ./src/main/resources/application-prod.yml
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_ACCESS_EXPIRATION: ${{ secrets.JWT_ACCESS_EXPIRATION }}
          JWT_REFRESH_EXPIRATION: ${{ secrets.JWT_REFRESH_EXPIRATION }}
          PROD_ORIGIN: ${{ secrets.PROD_ORIGIN }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}

      - name: Build Spring Boot JAR (skip tests)
        run: ./gradlew bootJar -x test

      - name: Check build output
        run: ls -l build/libs

      - name: Upload necessary files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: |
            build/libs/backend-0.0.1-SNAPSHOT.jar
            Dockerfile
            docker-compose.yml
            src/main/resources/application-prod.yml
          target: "~/cote-house/backend"

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/cote-house/backend

            echo "âœ… Starting deployment with Docker Compose"
            docker compose down
            docker image prune -f
            docker compose up -d --build